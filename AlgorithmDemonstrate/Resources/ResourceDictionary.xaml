<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AlgorithmDemonstrate">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources/Colors.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/Resources/Fonts.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/Resources/Sizes.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="Xbutton" TargetType="Button" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="canvas" Width="34" Height="26" Background="Transparent">
                            <Path Width="10" Height="8" Canvas.Left="12" Canvas.Top="9" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 9.56133,0L 6.66667,3.22272L 3.772,0L 0.0146667,0L 0,0.0253296L 4.76933,5.33472L 0,10.6414L 0.0146667,10.6667L 3.772,10.6667L 6.66667,7.44403L 9.56133,10.6667L 13.3187,10.6667L 13.3333,10.6414L 8.564,5.33472L 13.3333,0.0253296L 13.3187,0L 9.56133,0 Z "/>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#7FFF0000" TargetName="canvas"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Kbutton" TargetType="Button" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="canvas" Width="34" Height="26" Background="Transparent">
                            <Path Width="9" Height="9" Canvas.Left="13" Canvas.Top="8" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 8.18572e-010,0L 8.18572e-010,3.26538L 8.18572e-010,3.54535L 8.18572e-010,9.4707L 8.18572e-010,10.6667L 1.18267,10.6667L 9.492,10.6667L 10.6653,10.6667L 10.6653,9.4707L 10.6653,3.54535L 10.6653,3.14136L 10.6653,0M 1.18267,3.54535L 9.492,3.54535L 9.492,9.4707L 1.18267,9.4707L 1.18267,3.54535 Z "/>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#7F979797" TargetName="canvas"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="K_Bbutton" TargetType="Button" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="canvas" Width="34" Height="26" Background="Transparent">
                            <Path Width="10" Height="10" Canvas.Left="12" Canvas.Top="8" Stretch="Fill" Fill="#FFFFFFFF" Data="F1 M 4,0L 4,2.67169L 4.00133,2.67169L 4.00133,3.98224L 0.00133333,3.98224L 0.00133333,6.65393L -1.49782e-011,6.65393L -1.49782e-011,13.3333L 1.33333,13.3333L 1.33333,6.65393L 8.00133,6.65393L 8.00133,11.9961L 1.33467,11.9961L 1.33467,13.332L 8.00133,13.332L 8.00133,13.3333L 9.33467,13.3333L 9.33467,9.32172L 12.668,9.32172L 13.3267,9.32172L 13.3267,2.67169L 13.3333,2.67169L 13.3333,0M 5.33467,2.67169L 11.992,2.67169L 11.992,7.98584L 9.33467,7.98584L 9.33467,6.65393L 9.33467,3.98224L 5.33467,3.98224L 5.33467,2.67169 Z "/>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#7F979797" TargetName="canvas"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Sbutton" TargetType="Button" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="canvas" Width="34" Height="26" Background="Transparent">
                            <Rectangle Width="9" Height="3" Canvas.Left="13" Canvas.Top="14" Stretch="Fill" Fill="#FFFFFFFF"/>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#7F979797" TargetName="canvas"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--以上为无边框窗口按钮-->
    <DrawingBrush x:Key="LOGO" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 4.25781,0.500001C 6.33319,0.500001 8.01562,2.18243 8.01562,4.25781C 8.01562,6.3332 6.33319,8.01563 4.25781,8.01563C 2.18243,8.01563 0.5,6.3332 0.5,4.25781C 0.5,2.18243 2.18243,0.500001 4.25781,0.500001 Z ">
                        <GeometryDrawing.Pen>
                            <Pen LineJoin="Round" Brush="#FFFFFFFF"/>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="HomeIcon" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 8.57559,4.29796L 8.57559,7.08988C 8.57559,7.19063 8.53622,7.27791 8.45747,7.35174C 8.37873,7.42556 8.28562,7.46248 8.17815,7.46248L 5.79558,7.46248L 5.79558,5.22882L 4.20719,5.22882L 4.20719,7.46248L 1.82463,7.46248C 1.71715,7.46248 1.62405,7.42556 1.5453,7.35174C 1.46655,7.27791 1.42718,7.19063 1.42718,7.08988L 1.43274,4.26279L 4.99999,1.50605L 8.57351,4.29796L 8.57559,4.29796 Z M 9.95969,3.89669L 9.57476,4.32728C 9.54188,4.36201 9.49833,4.3833 9.44413,4.39111L 9.42537,4.39111C 9.37163,4.39111 9.32809,4.37744 9.29475,4.35007L 5.00139,0.994046L 0.708031,4.35007C 0.658467,4.38091 0.608903,4.39459 0.559338,4.39111C 0.505604,4.3833 0.462062,4.36201 0.42871,4.32728L 0.043774,3.89669C 0.0108856,3.85805 -0.00370645,3.81244 3.54785e-009,3.7599C 0.00370543,3.70735 0.0264035,3.66566 0.0680931,3.63483L 4.5289,0.151128C 4.66139,0.0503728 4.81865,-2.98023e-007 5.00069,-2.98023e-007C 5.18274,-2.98023e-007 5.34,0.0503728 5.47248,0.151128L 6.98652,1.33734L 6.98652,0.203244C 6.98652,0.148955 7.00504,0.104447 7.04211,0.069699C 7.07916,0.0349624 7.12664,0.017594 7.18454,0.017594L 8.37549,0.017594C 8.43338,0.017594 8.48087,0.0349624 8.51792,0.069699C 8.55499,0.104447 8.57351,0.148955 8.57351,0.203244L 8.57351,2.57631L 9.9319,3.63483C 9.97313,3.66566 9.99583,3.70735 10,3.7599C 10.0042,3.81244 9.98957,3.85805 9.95622,3.89669L 9.95969,3.89669 Z "/>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="SettingIcon" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 5.17708,3.88281C 5.17708,3.52554 5.05069,3.22051 4.7979,2.96772C 4.54511,2.71493 4.24009,2.58854 3.88281,2.58854C 3.52554,2.58854 3.22051,2.71493 2.96772,2.96772C 2.71493,3.22051 2.58854,3.52554 2.58854,3.88281C 2.58854,4.24009 2.71493,4.54511 2.96772,4.7979C 3.22051,5.05069 3.52554,5.17708 3.88281,5.17708C 4.24009,5.17708 4.54511,5.05069 4.7979,4.7979C 5.05069,4.54511 5.17708,4.24009 5.17708,3.88281 Z M 7.76562,3.33174L 7.76562,4.45411C 7.76562,4.49455 7.75214,4.53332 7.72518,4.57039C 7.69821,4.60747 7.66451,4.62938 7.62406,4.63612L 6.68875,4.77768C 6.62471,4.95969 6.55898,5.11304 6.49157,5.23775C 6.60954,5.40628 6.78987,5.63884 7.03254,5.93544C 7.06625,5.97589 7.0831,6.01802 7.0831,6.06184C 7.0831,6.10566 7.06793,6.14442 7.0376,6.17812C 6.94659,6.30283 6.77975,6.48483 6.53708,6.72414C 6.2944,6.96345 6.13599,7.0831 6.06184,7.0831C 6.02139,7.0831 5.97758,7.06793 5.93039,7.0376L 5.23269,6.49157C 5.08439,6.5691 4.93104,6.63314 4.77262,6.6837C 4.71869,7.14208 4.66982,7.45554 4.626,7.62406C 4.60241,7.71844 4.54174,7.76562 4.444,7.76562L 3.32162,7.76562C 3.27444,7.76562 3.23315,7.7513 3.19776,7.72265C 3.16237,7.694 3.14299,7.65777 3.13962,7.61395L 2.99806,6.6837C 2.8329,6.62977 2.68123,6.56741 2.54304,6.49663L 1.83018,7.0376C 1.79648,7.06793 1.75434,7.0831 1.70378,7.0831C 1.6566,7.0831 1.61447,7.06456 1.57739,7.02748C 1.15271,6.64325 0.874642,6.36013 0.743192,6.17812C 0.719601,6.14442 0.707803,6.10566 0.707803,6.06184C 0.707803,6.02139 0.721288,5.98263 0.748251,5.94556C 0.798805,5.87478 0.884754,5.76271 1.00609,5.60935C 1.12743,5.45599 1.21843,5.33718 1.2791,5.25292C 1.1881,5.08439 1.119,4.91755 1.07182,4.7524L 0.146615,4.61589C 0.1028,4.60915 0.0674111,4.58809 0.0404478,4.5527C 0.0134844,4.51731 0,4.4777 0,4.43389L 0,3.31151C 0,3.27107 0.0134844,3.23231 0.0404478,3.19523C 0.0674111,3.15816 0.0994276,3.13625 0.136503,3.12951L 1.07688,2.98795C 1.12406,2.83291 1.18979,2.67786 1.27405,2.52282C 1.13923,2.3307 0.958905,2.09813 0.73308,1.82512C 0.699378,1.78468 0.682526,1.74423 0.682526,1.70378C 0.682526,1.67008 0.697691,1.63132 0.728027,1.58751C 0.815662,1.46617 0.981658,1.285 1.22602,1.04401C 1.47038,0.803022 1.62963,0.682527 1.70378,0.682527C 1.7476,0.682527 1.79142,0.699379 1.83523,0.733081L 2.53293,1.27405C 2.68123,1.19653 2.83459,1.13249 2.993,1.08193C 3.04693,0.623542 3.0958,0.310088 3.13962,0.141562C 3.16321,0.0471875 3.22388,6.55651e-007 3.32162,6.55651e-007L 4.444,6.55651e-007C 4.49119,6.55651e-007 4.53247,0.0143229 4.56787,0.0429732C 4.60326,0.0716216 4.62264,0.107854 4.626,0.151675L 4.76757,1.08193C 4.93272,1.13586 5.08439,1.19821 5.22258,1.26899L 5.9405,0.728028C 5.97083,0.697692 6.01128,0.682527 6.06184,0.682527C 6.10566,0.682527 6.14778,0.699379 6.18823,0.733081C 6.62302,1.13417 6.90109,1.42067 7.02243,1.59256C 7.04602,1.61953 7.05782,1.6566 7.05782,1.70378C 7.05782,1.74423 7.04434,1.78299 7.01737,1.82007C 6.96682,1.89085 6.88087,2.00292 6.75953,2.15628C 6.63819,2.30964 6.54719,2.42844 6.48652,2.51271C 6.57416,2.68123 6.64325,2.84638 6.69381,3.00817L 7.61901,3.14973C 7.66282,3.15647 7.69821,3.17754 7.72518,3.21293C 7.75214,3.24832 7.76562,3.28792 7.76562,3.33174 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="VersionIcon" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 7.86804,3.865C 7.82992,1.6923 6.0377,-0.0381168 3.865,-3.27826e-007C 1.74601,0.0371768 0.0371759,1.74601 0,3.865C 0.0381182,6.0377 1.83034,7.76812 4.00304,7.73C 6.12203,7.69282 7.83086,5.98399 7.86804,3.865 Z M 4.49447,5.67162C 3.91283,6.29259 3.17869,6.49111 3.09153,6.02326C 3.02496,5.67162 3.37236,4.39276 3.44257,3.91221C 3.46557,3.75485 3.26645,3.91221 3.26645,3.91221C 3.26645,3.91221 2.69571,4.31408 2.56498,4.08772C 2.5444,4.05141 2.68542,3.94126 2.7411,3.9116C 2.7411,3.9116 3.93099,3.03764 4.32016,3.20772C 4.70872,3.37839 4.18338,4.45632 4.14404,4.61549C 4.1059,4.77527 3.85897,5.99542 4.67059,5.31938C 4.67059,5.31938 5.0761,5.04944 4.49446,5.67162M 4.1973,2.67935C 3.85841,2.66016 3.59917,2.37003 3.61809,2.03114C 3.618,1.69153 3.89324,1.41616 4.23285,1.41607C 4.57246,1.41599 4.84784,1.69123 4.84792,2.03084C 4.84793,2.05318 4.84671,2.07551 4.84429,2.09772C 4.82639,2.43686 4.53696,2.69727 4.1973,2.67935"/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <Style x:Key="Menu_HomeButton" TargetType="Button" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="canvas" Width="100" Height="35" Background="Transparent">
                            <Canvas Background="{DynamicResource HomeIcon}" Width="29" Height="29" Margin="13,3,0,0"/>
                            <Label Content="主页" Foreground="White" FontSize="14" Margin="52,3,0,0"/>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#19FFFFFF" TargetName="canvas"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Menu_SettingButton" TargetType="Button" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="canvas" Width="100" Height="35" Background="Transparent">
                            <Canvas Background="{DynamicResource SettingIcon}" Width="25" Height="25" Margin="13,5,0,0"/>
                            <Label Content="算法介绍" Foreground="White" FontSize="14" Margin="37,3,0,0"/>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#19FFFFFF" TargetName="canvas"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Menu_AboutButton" TargetType="Button" >
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="canvas" Width="100" Height="35" Background="Transparent">
                            <Canvas Background="{DynamicResource VersionIcon}" Width="25" Height="25" Margin="13,5,0,0"/>
                            <Label Content="关于" Foreground="White" FontSize="14" Margin="52,3,0,0"/>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#19FFFFFF" TargetName="canvas"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--下拉按钮-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Back" Background="#F7FDF7" BorderThickness="1" BorderBrush="Transparent" Width="24">
                        <Path Name="PathFill" Fill="#59CA4F" Width="8" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                            <Setter TargetName="Back" Property="Background" Value="#59CA4F"></Setter>
                            <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--bootstrap-->
    <!--基样式-->
    <Style x:Key="BaseStyle" BasedOn="{x:Null}" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}"></Setter>
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}"></Setter>
    </Style>
    <!--TextBox PasswordBox ComboBox CheckBox RadioButton-->
    <!--基样式-->
    <Style x:Key="FormControlBaseStyle" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type Control}">
        <Setter Property="Height" Value="{DynamicResource DefaultControlHeight}"/>
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}"/>
        <Setter Property="Background" Value="{DynamicResource FormControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource FormControlBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FormControlForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border.Effect>
                                <DropShadowEffect x:Name="dse" BlurRadius="8" ShadowDepth="0" Color="#9966afe9" Opacity="0"/>
                            </Border.Effect>
                            <Rectangle Height="1" VerticalAlignment="Top" Stroke="#000000" Opacity="0.1">
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1"/>
                                </Rectangle.Effect>
                            </Rectangle>
                        </Border>
                        <!--内容放在外面 因为阴影会对内容产生影响 Margin绑定BorderThickness是为了让padding没有误差-->
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" Padding="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="BorderBrush" Value="#66afe9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#eee"/>
                <Setter Property="Cursor" Value="No"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TextBox-->
    <Style BasedOn="{StaticResource FormControlBaseStyle}" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="#eee"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="IBeam"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ComboBox-->
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 2.5 5 L 5 0 Z</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Border.Effect>
                                <DropShadowEffect x:Name="dse" BlurRadius="0" ShadowDepth="0" Color="#9966afe9" Opacity="0"/>
                            </Border.Effect>
                            <Rectangle Height="1" VerticalAlignment="Top" Stroke="#000000" Opacity="0.1">
                                <Rectangle.Effect>
                                    <BlurEffect Radius="1"/>
                                </Rectangle.Effect>
                            </Rectangle>
                        </Border>
                        <Border CornerRadius="0" Margin="{TemplateBinding BorderThickness}" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="border" Property="BorderBrush" Value="#66afe9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Margin="0" Padding="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" CornerRadius="4" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup Grid.ColumnSpan="2" x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="Shdw" Background="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Border>
            </Popup>
            <Border Grid.ColumnSpan="2" x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                <Border.Effect>
                    <DropShadowEffect x:Name="dse" BlurRadius="0" ShadowDepth="0" Color="#9966afe9" Opacity="0"/>
                </Border.Effect>
                <Rectangle Height="1" VerticalAlignment="Top" Stroke="#000000" Opacity="0.1">
                    <Rectangle.Effect>
                        <BlurEffect Radius="1"/>
                    </Rectangle.Effect>
                </Rectangle>
            </Border>
            <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
            <ToggleButton Grid.Column="1" Margin="{TemplateBinding BorderThickness}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="dse" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter TargetName="border" Property="BorderBrush" Value="#66afe9"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Background" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style BasedOn="{StaticResource FormControlBaseStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup Grid.ColumnSpan="2" x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="Shdw" Background="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                        <Border IsHitTestVisible="false" CornerRadius="4" Margin="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="Transparent">
                            <ContentPresenter Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Background" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <!--<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>-->
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--CheckBox-->
    <Style x:Key="CheckBoxBaseStyle" BasedOn="{StaticResource FormControlBaseStyle}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Width="14" Height="14" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid>
                                <Path x:Name="checkedPath" Stroke="{DynamicResource Foreground-Default2}" StrokeThickness="2" Visibility="Collapsed" Data="M1,5 L4,8 9,2"/>
                                <Rectangle x:Name="nullRec" Width="8" Height="8" RadiusX="2" RadiusY="2" Fill="{TemplateBinding BorderBrush}" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkedPath" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="nullRec" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="{x:Type CheckBox}"/>
    <Style x:Key="checkbox has-success" BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource Foreground-Success}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Success}"/>
    </Style>
    <Style x:Key="checkbox has-warning" BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource Foreground-Warning}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Warning}"/>
    </Style>
    <Style x:Key="checkbox has-error" BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource Foreground-Danger}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Danger}"/>
    </Style>
    <!--RadioButton-->
    <Style x:Key="RadioButtonBaseStyle" BasedOn="{StaticResource FormControlBaseStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="14"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Width="14" Height="14" CornerRadius="7" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Ellipse x:Name="checkedEll" Width="8" Height="8" Fill="{TemplateBinding BorderBrush}" Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter Grid.Column="1" x:Name="Cp" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkedEll" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadioButtonBaseStyle}" TargetType="{x:Type RadioButton}"/>
    <Style x:Key="radio has-success" BasedOn="{StaticResource RadioButtonBaseStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource Foreground-Success}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Success}"/>
    </Style>
    <Style x:Key="radio has-warning" BasedOn="{StaticResource RadioButtonBaseStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource Foreground-Warning}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Warning}"/>
    </Style>
    <Style x:Key="radio has-error" BasedOn="{StaticResource RadioButtonBaseStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource Foreground-Danger}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Danger}"/>
    </Style>
    <!--按钮 源码行数:2782-3171-->
    <!--ButtonBase基样式-->
    <Style x:Key="ButtonBaseBaseStyle" BasedOn="{StaticResource BaseStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Height" Value="{DynamicResource DefaultControlHeight}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <!--Button基样式-->
    <Style x:Key="ButtonBaseStyle" BasedOn="{StaticResource ButtonBaseBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                            <!--点击时显示-->
                            <Grid x:Name="PressedLayer" Visibility="Collapsed">
                                <Rectangle Height="3" VerticalAlignment="Top" Fill="#1F000000" RadiusX="4" RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="0"></BlurEffect>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border CornerRadius="4" BorderBrush="#1F000000" BorderThickness="1,0">
                                    <Border.Effect>
                                        <BlurEffect Radius="0"></BlurEffect>
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--禁用时显示-->
                        <Rectangle x:Name="EnabledLayer" Fill="#4CFFFFFF" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PressedLayer" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#80cccccc"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ToggleButton基样式-->
    <Style x:Key="ToggleButtonBaseStyle" BasedOn="{StaticResource ButtonBaseBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                            <!--点下时显示-->
                            <Grid x:Name="CheckedLayer" Visibility="Collapsed">
                                <Rectangle Height="3" VerticalAlignment="Top" Fill="#1F000000" RadiusX="4" RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="0"></BlurEffect>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border CornerRadius="4" BorderBrush="#1F000000" BorderThickness="1,0">
                                    <Border.Effect>
                                        <BlurEffect Radius="0"></BlurEffect>
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--禁用时显示-->
                        <Rectangle x:Name="EnabledLayer" Fill="#4CFFFFFF" RadiusX="4" RadiusY="4" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckedLayer" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="#80cccccc"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Button-->
    <Style BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Default1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Default1}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="BorderBrush" Value="#adadad"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-primary" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Primary1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Primary1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-success" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Success1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Success1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#449d44"/>
                <Setter Property="BorderBrush" Value="#398439"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-info" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Info1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Info1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#31b0d5"/>
                <Setter Property="BorderBrush" Value="#269abc"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-warning" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Warning1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Warning1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ec971f"/>
                <Setter Property="BorderBrush" Value="#d58512"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btn-danger" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Background-Danger1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Danger1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c9302c"/>
                <Setter Property="BorderBrush" Value="#ac2925"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--ToggleButton-->
    <Style BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Default1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Default1}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground-Default}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="BorderBrush" Value="#adadad"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-primary" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Primary1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Primary1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3071a9"/>
                <Setter Property="BorderBrush" Value="#285e8e"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-success" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Success1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Success1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#449d44"/>
                <Setter Property="BorderBrush" Value="#398439"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-info" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Info1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Info1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#31b0d5"/>
                <Setter Property="BorderBrush" Value="#269abc"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-warning" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Warning1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Warning1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ec971f"/>
                <Setter Property="BorderBrush" Value="#d58512"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="tbtn-danger" BasedOn="{StaticResource ToggleButtonBaseStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource Background-Danger1}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush-Danger1}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#c9302c"/>
                <Setter Property="BorderBrush" Value="#ac2925"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
    